#!/usr/bin/env ruby
# frozen_string_literal: true

lib_path = File.expand_path('../lib', __dir__)
$:.unshift(lib_path) if !$:.include?(lib_path)
require 'dip'
require 'dip/cli'
require 'pry-byebug' if Dip.debug?

Signal.trap('INT') do
  warn("\n#{caller.join("\n")}: interrupted")
  exit(1)
end

begin
  run_vars = []

  ARGV.each do |arg|
    if !run_vars.frozen? && arg.include?("=")
      key, val = arg.split("=", 2)
      run_vars << "#{"--x-dip-run-vars=" if run_vars.empty?}#{key}:#{val}"
    else
      run_vars.freeze
    end
  end

  unless run_vars.empty?
    ARGV.shift(run_vars.size)
    ARGV.push(*run_vars)
  end

  Dip::CLI.start
rescue Dip::Error => err
  puts "ERROR: #{err.message}"
  exit 1
end
